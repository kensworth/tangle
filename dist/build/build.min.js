React.render(React.createElement(Board,{count:10}),document.getElementById("app"));var Note=React.createClass({displayName:"Note",getInitialState:function(){return{editing:!1}},componentWillMount:function(){this.style={right:this.randomBetween(0,window.innerWidth-150)+"px",top:this.randomBetween(0,window.innerHeight-150)+"px"}},componentDidMount:function(){$(this.getDOMNode()).draggable()},randomBetween:function(e,t){return e+Math.ceil(Math.random()*t)},edit:function(){this.setState({editing:!0})},save:function(){this.props.onChange(this.refs.newText.getDOMNode().value,this.props.index),this.setState({editing:!1})},remove:function(){this.props.onRemove(this.props.index)},renderDisplay:function(){return React.createElement("div",{className:"note",style:this.style},React.createElement("p",null,this.props.children),React.createElement("span",null,React.createElement("button",{onClick:this.edit,className:"btn btn-primary glyphicon glyphicon-pencil"}),React.createElement("button",{onClick:this.remove,className:"btn btn-danger glyphicon glyphicon-trash"})))},renderForm:function(){return React.createElement("div",{className:"note",style:this.style},React.createElement("textarea",{ref:"newText",defaultValue:this.props.children,className:"form-control"}),React.createElement("button",{onClick:this.save,className:"btn btn-success btn-sm glyphicon glyphicon-floppy-disk"}))},render:function(){return this.state.editing?this.renderForm():this.renderDisplay()}}),Board=React.createClass({displayName:"Board",propTypes:{count:function(e,t){return"number"!=typeof e[t]?new Error("The count property must be a number"):e[t]>100?new Error("Creating "+e[t]+" notes is ridiculous"):void 0}},getInitialState:function(){return{notes:[]}},nextId:function(){return this.uniqueId=this.uniqueId||0,this.uniqueId++},add:function(e){var t=this.state.notes;t.push({id:this.nextId(),note:e}),this.setState({notes:t})},update:function(e,t){var n=this.state.notes;n[t].note=e,this.setState({notes:n})},remove:function(e){var t=this.state.notes;t.splice(e,1),this.setState({notes:t})},eachNote:function(e,t){return React.createElement(Note,{key:e.id,index:t,onChange:this.update,onRemove:this.remove},e.note)},proliferate:function(){this.add.bind(null,"node")},render:function(){return React.createElement("div",{className:"board"},this.state.notes.map(this.eachNote),React.createElement("button",{className:"btn btn-sm btn-success glyphicon glyphicon-plus",onClick:this.add.bind(null,"node")}))}});